{
  "uid" : "1cc20e0f90035bc0",
  "name" : "test_order_check_volume_type[-2]",
  "fullName" : "Suit.test_create_order.TestOpenApi#test_order_check_volume_type",
  "historyId" : "4fb75f1c398c1c3f731392c0a4f78dcf",
  "time" : {
    "start" : 1605689285454,
    "stop" : 1605689285711,
    "duration" : 257
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert '100005' == '5'\n  - 5\n  + 100005",
  "statusTrace" : "self = <Suit.test_create_order.TestOpenApi object at 0x0000029692FD6C18>\nprice = '', type = 2\n\n    @allure.story('下单参数校验-price-type 下单类型,价格组合校验')\n    @pytest.mark.parametrize('price,type', [(1, 2), ('', 2)])\n    def test_order_check_volume_type(self, price, type):\n        request_path = '/open/api/create_order'\n        params = {\n            \"api_key\": self.api_key,\n            \"time\": self.tie, \"side\": \"SELL\",\n            \"type\": type,\n            \"volume\": 1,\n            \"price\": price,\n            \"symbol\": config.symbol\n        }\n        result = Signature(self.secret_key).post_sign(config.types, params, request_path, self.host)\n        print('下单response:{}'.format(result))\n>       assert result['code'] == '5'\nE       AssertionError: assert '100005' == '5'\nE         - 5\nE         + 100005\n\nSuit\\test_create_order.py:114: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1605689044732,
      "stop" : 1605689044772,
      "duration" : 40
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1605689279070,
      "stop" : 1605689279137,
      "duration" : 67
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert '100005' == '5'\n  - 5\n  + 100005",
    "statusTrace" : "self = <Suit.test_create_order.TestOpenApi object at 0x0000029692FD6C18>\nprice = '', type = 2\n\n    @allure.story('下单参数校验-price-type 下单类型,价格组合校验')\n    @pytest.mark.parametrize('price,type', [(1, 2), ('', 2)])\n    def test_order_check_volume_type(self, price, type):\n        request_path = '/open/api/create_order'\n        params = {\n            \"api_key\": self.api_key,\n            \"time\": self.tie, \"side\": \"SELL\",\n            \"type\": type,\n            \"volume\": 1,\n            \"price\": price,\n            \"symbol\": config.symbol\n        }\n        result = Signature(self.secret_key).post_sign(config.types, params, request_path, self.host)\n        print('下单response:{}'.format(result))\n>       assert result['code'] == '5'\nE       AssertionError: assert '100005' == '5'\nE         - 5\nE         + 100005\n\nSuit\\test_create_order.py:114: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "2c8cc6a11622d5da",
      "name" : "log",
      "source" : "2c8cc6a11622d5da.txt",
      "type" : "text/plain",
      "size" : 726
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1605689285726,
      "stop" : 1605689285726,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "创建订单,/open/api/create_order"
  }, {
    "name" : "story",
    "value" : "下单参数校验-price-type 下单类型,价格组合校验"
  }, {
    "name" : "parentSuite",
    "value" : "Suit"
  }, {
    "name" : "suite",
    "value" : "test_create_order"
  }, {
    "name" : "subSuite",
    "value" : "TestOpenApi"
  }, {
    "name" : "host",
    "value" : "LAPTOP-ORREJKSR"
  }, {
    "name" : "thread",
    "value" : "20780-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "Suit.test_create_order"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "price",
    "value" : "''"
  }, {
    "name" : "type",
    "value" : "2"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "153fd8c75b0bb534",
      "status" : "broken",
      "statusDetails" : "TypeError: environment() takes 1 positional argument but 2 were given",
      "time" : {
        "start" : 1605685292048,
        "stop" : 1605685292048,
        "duration" : 0
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 2,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 3
      },
      "items" : [ {
        "uid" : "16d4f8d80133907d",
        "reportUrl" : "http://localhost:8080/jenkins/job/autopytest/58/allure/#testresult/16d4f8d80133907d",
        "status" : "broken",
        "statusDetails" : "TypeError: environment() takes 1 positional argument but 2 were given",
        "time" : {
          "start" : 1605685292048,
          "stop" : 1605685292048,
          "duration" : 0
        }
      }, {
        "uid" : "cb2ea4e21d0d7704",
        "reportUrl" : "http://localhost:8080/jenkins/job/autopytest/57/allure/#testresult/cb2ea4e21d0d7704",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '100005' == '5'\n  - 5\n  + 100005",
        "time" : {
          "start" : 1602809853076,
          "stop" : 1602809853159,
          "duration" : 83
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "1cc20e0f90035bc0.json",
  "parameterValues" : [ "''", "2" ]
}